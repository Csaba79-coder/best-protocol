openapi: 3.0.3
info:
  title: Best Protocol
  description: API Interface and Model for Best Protocol
  version: 1.0.0
  contact:
    email: csabavadasz79@gmail.com
servers:
  - url: 'http://localhost:8080'
tags:
  - name: government-representative
  - name: government
  - name: menu
  - name: index
  - name: log

paths:
  /:
    get:
      summary: Get the index page
      description: Get the index page
      operationId: renderIndexPage
      tags:
        - index
      responses:
        '200':
          description: Successful response
          content:
            text/html:
              schema:
                type: string
          x-default-response: true
  /index:
    get:
      summary: Get the index page
      description: Get the index page
      operationId: renderIndexPageIndex
      tags:
        - index
      responses:
        '200':
          description: Successful response
          content:
            text/html:
              schema:
                type: string
          x-default-response: true
  /index.html:
    get:
      summary: Get the index page
      description: Get the index page
      operationId: renderIndexPageFromIndexHtml
      tags:
        - index
      responses:
        '200':
          description: Successful response
          content:
            text/html:
              schema:
                type: string
          x-default-response: true

  /{languageShortName}/api/admin/gov-representatives:
    post:
      tags:
        - government-representative
      summary: Add a new Government Representative
      description: Add a new Government Representative to the database
      operationId: addNewRepresentative
      parameters:
        - name: languageShortName
          in: path
          description: short name of selected language
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new Representative in the database
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewRepresentativeAdminModel'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepresentativeAdminModel'
        '405':
          description: Invalid input

    get:
      tags:
        - government-representative
      summary: Render all Government Representatives
      description: Render all Government Representatives from the database
      operationId: renderAllRepresentatives
      x-interface-name: RepresentativeApi
      parameters:
        - name: languageShortName
          in: path
          description: short name of selected language
          required: true
          schema:
            type: string
        - name: search
          in: query
          description: Search query string
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepresentativeAdminModel'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Representative not found
        '405':
          description: Validation exception

  /{languageShortName}/api/admin/gov-representatives/governments/{governmentId}:
    get:
      tags:
        - government-representative
      summary: Render Government Representatives by Government ID
      description: Render all Government Representatives from the database by Government ID
      operationId: findByGovernmentId
      x-interface-name: RepresentativeApi
      parameters:
        - name: governmentId
          in: path
          description: ID of the government to filter by
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: languageShortName
          in: path
          description: short name of selected language
          required: true
          schema:
            type: string

        - name: search
          in: query
          description: Search query string
          schema:
            type: string
        - name: page
          in: query
          description: The page number to retrieve
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: The page size to retrieve
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepresentativeAdminModel'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Representative not found
        '405':
          description: Validation exception

  /{languageShortName}/api/admin/governments:
    get:
      tags:
        - government
      summary: Get government data
      operationId: renderAllGovernments
      parameters:
        - name: languageShortName
          in: path
          description: short name of selected language
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GovernmentTranslationModel'
          headers:
            Cache-Control:
              description: Cache control header
              schema:
                type: string
            Expires:
              description: Expiration date header
              schema:
                type: string

  /{languageShortName}/api/admin/governments/{governmentId}:
    get:
      tags:
        - government
      summary: Get government data
      operationId: renderAllGovernmentsById
      parameters:
        - name: languageShortName
          in: path
          description: short name of selected language
          required: true
          schema:
            type: string
        - name: governmentId
          in: path
          description: ID of the government to filter by
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GovernmentTranslationModel'
          headers:
            Cache-Control:
              description: Cache control header
              schema:
                type: string
            Expires:
              description: Expiration date header
              schema:
                type: string

  /{languageShortName}/api/admin/governments/menu:
    get:
      tags:
        - menu
      summary: Get menu translation
      operationId: renderAllMenuTranslations
      parameters:
        - name: languageShortName
          in: path
          description: short name of selected language
          required: true
          schema:
            type: string
        - name: translationKey
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuTranslationModel'
          headers:
            Cache-Control:
              description: Cache control header
              schema:
                type: string
            Expires:
              description: Expiration date header
              schema:
                type: string

  /api/admin/logging-service/log:
    get:
      tags:
        - log
      summary: Get all log
      operationId: renderAllLogs
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoggingModel'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Log not found
        '405':
          description: Validation exception

    post:
      tags:
        - log
      summary: Add new log in a service
      description: Add new log in a service and save to database
      operationId: addNewLog
      requestBody:
        description: Create a new log and store it
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggingNewModel'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggingModel'
        '405':
          description: Invalid input

components:
  schemas:
    RepresentativeAdminModel:
      type: object
      properties:
        id:
          description: Id of the Representative
          type: string
          format: uuid
          example: '3a8ea9f1-1a95-4caf-932f-2f988052933b'
        createdAt:
          description: Creation time of Representative entity
          type: string
          format: datetime
          example: '2019-01-21T05:47:08.644'
        updatedAt:
          description: Updated time of Representative entity
          type: string
          format: datetime
          example: '2019-01-21T05:47:08.644'
        createdBy:
          description: User id who created the Representative entity
          type: string
          format: uuid
          example: '3a8ea9f1-1a95-4caf-932f-2f988052933b'
        updatedBy:
          description: User id who updated the Representative entity
          type: string
          format: uuid
          example: '3a8ea9f1-1a95-4caf-932f-2f988052933b'
        government:
          #description: Name of the Ministry
          #type: string
          #example: "Miniszterelnökség"
          $ref: '#/components/schemas/GovernmentAdminModel'
        representativeTranslation:
          $ref: '#/components/schemas/RepresentativeTranslationManagerModel'
        previousJobTitle:
          type: array
          items:
            $ref: '#/components/schemas/PreviousJobTitleTranslationModel'
        phoneNumber:
          description: Phone number of the Representative entity
          type: string
          example: "+36-30-235-6304"
        email:
          description: Email of the Representative entity
          type: string
          example: 'Vadász Csaba'
        image:
          description: Photo of the Representative
          type: string
          format: byte
        availability:
          $ref: '#/components/schemas/Availability'

    NewRepresentativeAdminModel:
      type: object
      properties:
        name:
          description: Name of the Representative entity
          type: string
          example: 'Vadász Csaba'
        government:
          description: Name of the Ministry
          type: string
          example: "Miniszterelnökség"
        secretairat:
          description: Name of the Secretairat
          type: string
          example: "Közigzagatási államtitkár"
        jobTitle:
          description: Job title of the Government Representative
          type: string
          example: "Miniszterelnökséget vezető miniszter"
        address:
          description: Address of the Agency
          type: string
          example: "2011 Budakalász, Gerinc utca hrsz. 2287/3"
        country:
          description: country of the Agency
          type: string
          example: "Magyarország"
        phoneNumber:
          description: Phone number of the Representative entity
          type: string
          example: "+36-30-235-6304"
        email:
          description: Email of the Representative entity
          type: string
          example: 'csabavadasz79@gmail.com'
        image:
          description: Photo of the Representative - base64 encoded binary content
          type: string
          format: binary
        note:
          description: Any extra, useful information
          type: string
          example: 'ételérzékenység: nincs, egyéb infó: vegán'

    RepresentativeTranslationManagerModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: '3a8ea9f1-1a95-4caf-932f-2f988052933b'
        languageShortName:
          type: string
        name:
          description: Name of the Representative entity
          type: string
          example: 'Vadász Csaba'
        secretairat:
          description: Name of the Secretairat
          type: string
          example: "Közigzagatási államtitkár"
        jobTitle:
          description: Job title of the Government Representative
          type: string
          example: "Miniszterelnökséget vezető miniszter"
        address:
          description: Address of the Agency
          type: string
          example: "2011 Budakalász, Gerinc utca hrsz. 2287/3"
        country:
          description: country of the Agency
          type: string
          example: "Magyarország"
        note:
          description: Any extra, useful information
          type: string
          example: 'Főosztály megnevezése: '
        secretNote:
          description: Secret note that is only visible for the Managers
          type: string
          example: 'Secret message'

    PreviousJobTitleTranslationModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        languageShortName:
          type: string

    GovernmentAdminModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        languageShortName:
          type: string
        governmentId:
          type: integer
          format: int64

    GovernmentTranslationModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        language_short_name:
          type: string
        name:
          type: string
        governmentId:
          type: integer
          format: int64

    Availability:
      type: string
      enum:
        - AVAILABLE
        - ARCHIVE
        - DELETED

    Language:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shortName:
          type: string
        name:
          type: string

    MenuTranslationModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        languageShortName:
          type: string
        translationKey:
          type: string
        translationValue:
          type: string

    LoggingNewModel:
      type: object
      properties:
        message:
          type: string
        level:
          type: string
        serviceName:
          type: string
      required:
        - message
        - level
        - serviceName

    LoggingModel:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
        message:
          type: string
        level:
          type: string
        serviceName:
          type: string